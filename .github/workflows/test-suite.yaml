name: Stash Test Suite
on: [push]

jobs:
  coding-standards:
    name: Coding Standards
    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install PHP Dependencies
        run: composer update

      - name: Verify Coding Standards
        run: vendor/bin/php-cs-fixer fix --diff --dry-run

  static-analysis:
    name: Static Analysis
    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install PHP Dependencies
        run: composer update

      - name: Run Static Analysis
        run: vendor/bin/phpstan analyze

  tests:
    name: Tests
    runs-on: 'ubuntu-latest'

    services:
      redis:
        image: redis:6.2
        ports: [6379:6379]
        options: --health-cmd "redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

      memcached:
        image: memcached:1.6
        ports: [11211:11211]

    strategy:
      matrix:
        php-versions: ['8.0', '8.1', '8.2', '8.3', '8.4']

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: apcu, memcached, redis
          ini-values: apc.enable_cli=1
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache PHP Dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install PHP Dependencies
        run: composer update

      - name: Run Tests
        run: vendor/bin/phpunit --coverage-text
